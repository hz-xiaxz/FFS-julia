#!/usr/bin/env -S julia --color=yes --startup-file=non

using Carlo
using Carlo.JobTools
using FastFermionSampling
using Dates

tm = TaskMaker()
tm.thermalization = 0
tm.sweeps = 100000
tm.binsize = 1
tm.t = 1.0
tm.W = 1.0
tm.U = 1.0
tm.N_up = 2
tm.N_down = 2
tm.nx = 2
tm.ny = 2
tm.B = "Periodic"

params = Dict(
    :t => 1.0,
    :W => 1.0,
    :U => 1.0,
    :N_up => 2,
    :N_down => 2,
    :nx => 2,
    :ny => 2,
    :B => "Periodic"
)
if params[:B] == "Periodic"
    lat = LatticeRectangular(params[:nx], params[:ny], Periodic())
elseif params[:B] == "Open"
    lat = LatticeRectangular(params[:nx], params[:ny], Open())
else
    throw(ArgumentError("Boundary condition not recognized"))
end

model = AHmodel(lat, params[:t], params[:W], params[:U], params[:N_up], params[:N_down])
conf = vcat(FFS(model.U_up), FFS(model.U_down))
task(tm)
dir = @__DIR__
savepath = dir * "/../data/" * Dates.format(Dates.now(), "mm-ddTHH-MM-SS")
job = JobInfo(
    savepath,
    FastFermionSampling.MC;
    tasks=make_tasks(tm),
    checkpoint_time="30:00",
    run_time="24:00:00"
)

Carlo.start(job, ARGS)
